[
    "SELECT product_id,\n\n           category,\n\n           sub_category,\n\n           SUM(sale_price * quantity) AS total_revenue\n\n    FROM RetailAnalysis\n\n    GROUP BY product_id, category, sub_category\n\n    ORDER BY total_revenue DESC\n\n    LIMIT 10;",
    "SELECT\n\n        city,\n\n        (SUM(profit) / SUM(sale_price)) * 100 AS profit_margin\n\n    FROM RetailAnalysis\n\n    GROUP BY city\n\n    ORDER BY profit_margin DESC\n\n    LIMIT 10;",
    "SELECT category, SUM(discount) AS total_discount\n\n    FROM RetailAnalysis\n\n    GROUP BY category;",
    "SELECT category, AVG(sale_price) AS avg_sale_price\n\n    FROM RetailAnalysis\n\n    GROUP BY category;",
    "SELECT region, AVG(sale_price) AS avg_sale_price\n\n    FROM RetailAnalysis\n\n    GROUP BY region\n\n    ORDER BY avg_sale_price DESC\n\n    LIMIT 1;",
    "SELECT category, SUM(profit) AS total_profit\n\n    FROM RetailAnalysis\n\n    GROUP BY category;",
    "SELECT\n\n        segment,\n\n        SUM(quantity) AS total_quantity\n\n    FROM RetailAnalysis\n\n    GROUP BY segment\n\n    ORDER BY total_quantity DESC\n\n    LIMIT 3;",
    "SELECT region, AVG(discount_percent) AS avg_discount_percentage\n\n    FROM RetailAnalysis\n\n    GROUP BY region;",
    "SELECT\n\n        category,\n\n        SUM(profit) AS total_profit\n\n    FROM RetailAnalysis\n\n    GROUP BY category\n\n    ORDER BY total_profit DESC",
    "SELECT\n\n        YEAR(order_date) AS year,\n\n        SUM(quantity * sale_price) AS total_revenue\n\n    FROM RetailAnalysis\n\n    GROUP BY YEAR(order_date)\n\n    ORDER BY year;",
    "SELECT\n\n        YEAR(o.order_date) AS sales_year,\n\n        MONTH(o.order_date) AS sales_month,\n\n        SUM(p.quantity * p.sale_price) AS monthly_sales\n\n    FROM Products p\n\n    JOIN Orders o ON p.order_id = o.order_id\n\n    GROUP BY sales_year, sales_month\n\n    ORDER BY sales_year, sales_month;",
    "SELECT\n\n        o.region,\n\n        SUM(p.sale_price * p.quantity) AS total_revenue\n\n    FROM Products p\n\n    JOIN Orders o ON p.order_id = o.order_id\n\n    GROUP BY o.region\n\n    ORDER BY total_revenue DESC;",
    "SELECT \n\n        p.category,\n\n        ROUND(SUM(p.sale_price * p.quantity), 2) AS category_revenue,\n\n        ROUND((SUM(p.sale_price * p.quantity) / \n\n              (SELECT SUM(sale_price * quantity) FROM Products)) * 100, 2) AS revenue_percentage\n\n    FROM Products p\n\n    JOIN Orders o ON p.order_id = o.order_id\n\n    GROUP BY p.category\n\n    ORDER BY revenue_percentage DESC",
    "SELECT \n\n        o.segment,\n\n        ROUND(SUM(p.sale_price * p.quantity), 2) AS total_revenue\n\n    FROM Products p\n\n    JOIN Orders o ON p.order_id = o.order_id\n\n    GROUP BY o.segment\n\n    ORDER BY total_revenue DESC",
    "SELECT \n\n        p.category,\n\n        SUM(p.profit) AS total_profit,\n\n        SUM(p.sale_price * p.quantity) AS total_revenue,\n\n        ROUND((SUM(p.profit) / SUM(p.sale_price * p.quantity)) * 100, 2) AS profit_margin_percentage\n\n    FROM Products p\n\n    JOIN Orders o ON p.order_id = o.order_id\n\n    GROUP BY p.category\n\n    ORDER BY profit_margin_percentage DESC",
    "SELECT \n\n         o.region, SUM(p.profit) AS total_profit\n\n         FROM Orders o\n\n         JOIN Products p ON o.order_id = p.order_id\n\n   GROUP BY o.region\n\n   ORDER BY total_profit DESC\n\n   LIMIT 5",
    "SELECT \n\n        p.product_id,\n\n        p.category,\n\n        p.sub_category,\n\n        SUM(p.quantity) AS total_quantity_sold,\n\n        ROUND(SUM(p.sale_price * p.quantity), 2) AS total_revenue,\n\n        ROUND(SUM(p.profit), 2) AS total_profit,\n\n        ROUND(AVG(p.discount_percent), 2) AS avg_discount_percent,\n\n        RANK() OVER (ORDER BY SUM(p.sale_price * p.quantity) DESC) AS revenue_rank\n\n    FROM Products p\n\n    JOIN Orders o ON p.order_id = o.order_id\n\n    GROUP BY p.product_id, p.category, p.sub_category\n\n    LIMIT 10",
    "SELECT \n\n        p.product_id,\n\n        o.order_id,\n\n        o.region,\n\n        p.category,\n\n        p.sub_category,\n\n        p.discount_percent,\n\n        p.sale_price,\n\n        p.quantity,\n\n        p.discount,\n\n        (p.discount * p.quantity) AS total_discount_amount,\n\n        (p.sale_price * p.quantity) AS total_sales_after_discount,\n\n        ((p.list_price * p.quantity) - (p.sale_price * p.quantity)) AS discount_impact\n\n    FROM Products p\n\n    JOIN Orders o ON o.order_id = p.order_id\n\n    WHERE p.discount_percent > 0.20\n\n    ORDER BY p.discount_percent DESC\n\n    LIMIT 5",
    "SELECT \n\n        p.product_id,\n\n        p.category,\n\n        p.sub_category,\n\n        SUM(p.quantity) AS total_quantity_sold,\n\n        SUM(p.sale_price * p.quantity) AS total_revenue\n\n    FROM Products p\n\n    JOIN Orders o ON p.order_id = o.order_id\n\n    GROUP BY p.product_id, p.category, p.sub_category\n\n    ORDER BY total_revenue DESC\n\n    LIMIT 10",
    "SELECT \n\n        p.product_id,\n\n        p.category,\n\n        p.sub_category,\n\n        SUM(p.quantity) AS total_order_volume,\n\n        ROUND(SUM(p.sale_price * p.quantity), 2) AS total_revenue,\n\n        ROUND(SUM(p.profit), 2) AS total_profit,\n\n        RANK() OVER (ORDER BY SUM(p.quantity) DESC) AS volume_rank,\n\n        RANK() OVER (ORDER BY SUM(p.sale_price * p.quantity) DESC) AS revenue_rank\n\n    FROM Products p\n\n    JOIN Orders o ON p.order_id = o.order_id\n\n    GROUP BY p.product_id, p.category, p.sub_category\n\n    LIMIT 10;"
]